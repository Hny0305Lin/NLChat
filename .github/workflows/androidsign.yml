name: Android CI Release

on:
  push:
    tags:
      - "v*"

jobs:
  checkout:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4

  cache:
    runs-on: ubuntu-latest
    needs: checkout
    steps:
    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

  setup-java:
    runs-on: ubuntu-latest
    needs: cache
    steps:
    - name: JDK17 Eclipsejdk
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

  build:
    runs-on: ubuntu-latest
    needs: setup-java
    steps:
    - name: Set up Gradle
      uses: gradle/gradle-build-action@v3
      with:
        gradle-version: current
        arguments: assembleRelease

  sign:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Sign
      uses: r0adkll/sign-android-release@v2
      id: sign_app
      with:
        releaseDirectory: app/build/outputs/apk/release
        signingKeyBase64: ${{ secrets.SIGING_KEY }}
        alias: ${{ secrets.ALIAS }}
        keyStorePassword: ${{ secrets.KEY_PASSWORD }}
        keyPassword: ${{ secrets.KEY_PASSWORD }}
      env:
        BUILD_TOOLS_VERSION: "34.0.0"

    - name: Set signedReleaseFile output
      run: echo "signedReleaseFile=$(find app/build/outputs/apk/release -name '*.apk')" >> $GITHUB_ENV

  release-ready:
    runs-on: ubuntu-latest
    needs: sign
    steps:
    - name: Release Ready
      run: mv ${{ env.signedReleaseFile }} NLChat_$GITHUB_REF_NAME.apk

  release:
    runs-on: ubuntu-latest
    needs: release-ready
    steps:
    - name: Release
      uses: ncipollo/release-action@v1
      with:
        artifacts: "*.apk"
        token: ${{ github.token }}
        generateReleaseNotes: true

  version-control:
    runs-on: ubuntu-latest
    needs: release
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Bump version and generate changelog
      id: version
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        npm install -g standard-version
        standard-version --release-as ${{ github.ref_name }}
        git push --follow-tags origin ${{ github.ref_name }}

    - name: Create Release Notes
      uses: actions/create-release@v1
      with:
        tag_name: ${{ github.ref_name }}
        release_name: Release ${{ github.ref_name }}
        body: |
          $(git log -1 --pretty=%B)
        draft: false
        prerelease: false

  multi-platform-test:
    runs-on: ubuntu-latest
    needs: version-control
    strategy:
      matrix:
        api-level: [21, 23, 29, 30]
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Java
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Set up Android SDK
      uses: android-actions/setup-android@v2
      with:
        api-level: ${{ matrix.api-level }}
        build-tools: '34.0.0'

    - name: Run Instrumentation Tests
      run: ./gradlew connectedAndroidTest
